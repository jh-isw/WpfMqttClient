<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:WpfMqttClient"
    xmlns:ViewModel="clr-namespace:WpfMqttClient.ViewModel" x:Class="WpfMqttClient.MainWindow"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    mc:Ignorable="d" Title="{Binding Main.WindowTitle, Mode=OneWay}" Width="600">
    <Window.DataContext>
        <ViewModel:ViewModelLocator/>
    </Window.DataContext>
    <Window.IsEnabled>
        <Binding Path="BindableProperty" Source="{StaticResource MsgLstnr}"/>
    </Window.IsEnabled>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Extras">
                <MenuItem Header="_Restore Defaults" Command="{Binding Main.RestoreDefaultsCommand}" />
                <MenuItem Header="_With TLS" Command="{Binding Main.WithTlsCommand}"
                          IsChecked="{Binding Main.WithTls}" />
            </MenuItem>
        </Menu>
        <GroupBox DockPanel.Dock="Bottom" Header="Application Output">
            <TextBox Name="OutputBox" DockPanel.Dock="Bottom" Text="{Binding Main.ApplicationMessages}"
                 Height="90" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" IsReadOnly="True" >
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Clear Content" Command="{Binding Main.ClearOutputBoxContent}" />
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
        </GroupBox>
        <TabControl TabStripPlacement="Bottom" Margin="0,0,0,5">
            <TabItem Header="Datenquellen">
                <GroupBox Header="Datenquellen">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Content="Broker URI:" Margin="0,15,0,0"/>
                        <TextBox Grid.Column="1" Text="{Binding Main.BrokerUri, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,0">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding Main.AddDatasourceReturnKeyCommand}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Grid.Column="2" Command="{Binding Main.AddDatasourceCommand}" Content="Add" MinWidth="100" Margin="0,15,0,0"/>
                        <Label Content="Ausgewählt:" Grid.Row="1" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                   Text="{Binding Main.SelectedDatasourceModel.ClientId, UpdateSourceTrigger=PropertyChanged}" Padding="0,5,0,0"/>
                        <DataGrid Grid.Row="3" Grid.ColumnSpan="3" ItemsSource="{Binding Main.DatasourcesView}"
                                  IsReadOnly="True" IsSynchronizedWithCurrentItem="True" EnableRowVirtualization="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseRightButtonDown">
                                    <i:InvokeCommandAction Command="{Binding Main.EvaluateDatasourcesContextMenu}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <!--<DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="LightBlue" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>-->
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Start" Command="{Binding Main.ConnectCommand}" />
                                    <MenuItem Header="Stop" Command="{Binding Main.DisconnectCommand}" />
                                    <MenuItem Header="Remove" Command="{Binding Main.EraseDatasourceCommand}" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="Datenpunkte">
                <GroupBox Header="Datenpunkte">
                    <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.ColumnSpan="3" Orientation="Horizontal">
                            <RadioButton Name="RadioButtonSubscribe" Content="Subscribe" IsChecked="True" Margin="80,0,0,0" />
                            <RadioButton Name="RadioButtonUnsubscribe" Content="Unsubscribe" Margin="20,0,0,0" />
                        </StackPanel>
                        <Label Content="Topic Name:" Grid.Row="1" />
                        <TextBox Grid.Column="1" Name="DatapointNameTextBox" Text="{Binding Main.NewDatapointName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1">
                            <!--<TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding Main.NewDatapointReturnKeyCommand}" />
                            </TextBox.InputBindings>-->
                        </TextBox>
                        <Button Grid.Column="2" Name="NewOrDeleteDatapointButton" MinWidth="100" Grid.Row="1">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <!-- Default Properties -->
                                    <Setter Property="Content" Value="Subscribe"/>
                                    <Setter Property="Command" Value="{Binding Main.NewDatapointCommand}" />
                                    <!-- Triggered Properties -->
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=RadioButtonSubscribe, Path=IsChecked}" Value="True">
                                            <Setter Property="Content" Value="Subscribe" />
                                            <Setter Property="Command" Value="{Binding Main.NewDatapointCommand}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=RadioButtonUnsubscribe, Path=IsChecked}" Value="True">
                                            <Setter Property="Content" Value="Unsubscribe" />
                                            <Setter Property="CommandParameter" Value="{Binding ElementName=DatapointNameTextBox, Path=Text}" />
                                            <Setter Property="Command" Value="{Binding Main.UnsubscribeCommand}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Label Content="Ausgewählt:" Grid.Row="2" />
                        <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                   Text="{Binding Main.SelectedDatasourceModel.ClientId, UpdateSourceTrigger=PropertyChanged}" Padding="0,5,0,0" />
                        <DataGrid Grid.Row="3" Grid.ColumnSpan="3"  ItemsSource="{Binding Main.DatapointsView}" VerticalScrollBarVisibility="Auto"
                          AutoGenerateColumns="False" IsReadOnly="True" IsSynchronizedWithCurrentItem="True" EnableRowVirtualization="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Client-Zeit" Width="auto" Binding="{Binding Path=ClientTime, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}" />
                                <DataGridTextColumn Header="Name" Width="300" Binding="{Binding Path=Identifier}" />
                                <DataGridTextColumn Header="Wert" Width="*" Binding="{Binding Path=Value}" />
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Remove" Command="{Binding Main.RemoveDatapointCommand}" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
